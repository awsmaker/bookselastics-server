AWSTemplateFormatVersion: '2010-09-09'
Description: Elastic Beanstalk with CI/CD pipeline using CodePipeline and CodeBuild.

Parameters:
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to SSH into the instances.

  GitHubRepo:
    Type: String
    Description: GitHub repository name (e.g., user/repo).

  GitHubBranch:
    Type: String
    Default: main
    Description: GitHub branch to deploy.

  GitHubToken:
    Type: String
    NoEcho: true
    Description: GitHub personal access token with repo access.

  MongoURI:
    Type: String
    Description: MongoDB Atlas connection string.

  AppURL:
    Type: String
    Description: Front-end application URL.

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID where the environment will be created.

  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet ID where the environment will be created.

Resources:
  #################################################################
  # ElasticBeanstalk Roles & Resources
  #################################################################
  ElasticBeanstalkServiceRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      RoleName: "ebook-server-master-1-eb-service-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: elasticbeanstalk.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService
        - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth

  EC2InstanceRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      RoleName: "ebook-server-master-1-ec2-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    DeletionPolicy: Delete
    Properties:
      InstanceProfileName: "ebook-server-master-1-eb-ec2-profile"
      Roles:
        - !Ref EC2InstanceRole

  ElasticBeanstalkApplication:
    Type: AWS::ElasticBeanstalk::Application
    DeletionPolicy: Delete
    Properties:
      ApplicationName: "ebook-server-master-1"
      Description: "Elastic Beanstalk Application for MERN Stack Backend"

  ElasticBeanstalkEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    DeletionPolicy: Delete
    Properties:
      ApplicationName: !Ref ElasticBeanstalkApplication
      EnvironmentName: "ebook-server-env"
      SolutionStackName: "64bit Amazon Linux 2023 v6.4.1 running Node.js 18"
      Tier:
        Name: WebServer
        Type: Standard
      OptionSettings:
        - Namespace: aws:ec2:instances
          OptionName: EnableSpot
          Value: true
        - Namespace: aws:ec2:instances
          OptionName: SpotMaxPrice
          Value: "0.017"
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: !Ref EC2InstanceProfile
        - Namespace: aws:ec2:vpc
          OptionName: VPCId
          Value: !Ref VpcId
        - Namespace: aws:ec2:vpc
          OptionName: Subnets
          Value: !Ref SubnetId
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: InstanceType
          Value: t3.micro
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: EC2KeyName
          Value: !Ref KeyPairName
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: ServiceRole
          Value: !GetAtt ElasticBeanstalkServiceRole.Arn
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: SingleInstance
        - Namespace: aws:autoscaling:asg
          OptionName: MinSize
          Value: "1"
        - Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: "1"
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: MONGO_URI
          Value: !Ref MongoURI
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: APP_URL
          Value: !Ref AppURL
        - Namespace: aws:elasticbeanstalk:command
          OptionName: DeploymentPolicy
          Value: AllAtOnce
        - Namespace: aws:elasticbeanstalk:environment:proxy
          OptionName: ProxyServer
          Value: nginx

  #################################################################
  # S3 Bucket & IAM roles for CodePipeline / CodeBuild
  #################################################################
  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      VersioningConfiguration:
        Status: Enabled

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelineServicePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              # Accès S3 pour récupérer et déposer des artefacts
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !GetAtt ArtifactBucket.Arn
                  - !Join ['', [!GetAtt ArtifactBucket.Arn, '/*']]
              # Accès Elastic Beanstalk, CodeCommit, etc.
              - Effect: Allow
                Action:
                  - elasticbeanstalk:*
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                Resource: "*"
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: "*"

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess

  #################################################################
  # CodeBuild Project
  #################################################################
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AWS::StackName}-build"
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        EnvironmentVariables:
          - Name: MONGO_URI
            Type: PLAINTEXT
            Value: !Ref MongoURI
          - Name: APP_URL
            Type: PLAINTEXT
            Value: !Ref AppURL

  #################################################################
  # CodePipeline (3 stages: Source -> Build -> Deploy)
  #################################################################
  ApplicationPipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn:
      - ElasticBeanstalkApplication
      - ElasticBeanstalkEnvironment
      - CodeBuildProject
    Properties:
      Name: !Sub "${AWS::StackName}-pipeline"
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        # 1. Source
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Select [0, !Split ["/", !Ref GitHubRepo]]
                Repo: !Select [1, !Split ["/", !Ref GitHubRepo]]
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: SourceCode
              RunOrder: 1

        # 2. Build
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Sub "${AWS::StackName}-build"
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1

        # 3. Deploy
        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: ElasticBeanstalk
                Version: 1
              Configuration:
                ApplicationName: "ebook-server-master-1"
                EnvironmentName: "ebook-server-env"
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1

  #################################################################
  # CodePipeline Webhook
  #################################################################
  CodePipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubToken
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/main
      TargetPipeline: !Ref ApplicationPipeline
      TargetAction: Source
      Name: !Sub "${AWS::StackName}-webhook"
      TargetPipelineVersion: 1
      RegisterWithThirdParty: true

###################################################################
# Outputs
###################################################################
Outputs:
  EnvironmentURL:
    Description: URL of the Elastic Beanstalk Environment
    Value: !GetAtt ElasticBeanstalkEnvironment.EndpointURL
    Export:
      Name: !Sub "${AWS::StackName}-EnvironmentURL"
